-- Create posts system for social media-like functionality
SET search_path TO badminton, public;

-- Posts table
DROP TABLE IF EXISTS badminton."Post" CASCADE;
CREATE TABLE badminton."Post" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "user_id" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "is_deleted" BOOLEAN NOT NULL DEFAULT FALSE,
    "comment_count" INTEGER NOT NULL DEFAULT 0,
    PRIMARY KEY ("id"),
    CONSTRAINT post_user_id_fkey FOREIGN KEY ("user_id") REFERENCES badminton."User"("id") ON DELETE CASCADE
);

-- Comments table
DROP TABLE IF EXISTS badminton."Comment" CASCADE;
CREATE TABLE badminton."Comment" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "post_id" INTEGER NOT NULL,
    "user_id" INTEGER NOT NULL,
    "content" TEXT NOT NULL,
    "parent_comment_id" INTEGER, -- For nested comments/replies
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "is_deleted" BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY ("id"),
    CONSTRAINT comment_post_id_fkey FOREIGN KEY ("post_id") REFERENCES badminton."Post"("id") ON DELETE CASCADE,
    CONSTRAINT comment_user_id_fkey FOREIGN KEY ("user_id") REFERENCES badminton."User"("id") ON DELETE CASCADE,
    CONSTRAINT comment_parent_comment_id_fkey FOREIGN KEY ("parent_comment_id") REFERENCES badminton."Comment"("id") ON DELETE CASCADE
);

-- Attachments table for posts and comments
DROP TABLE IF EXISTS badminton."Attachment" CASCADE;
CREATE TABLE badminton."Attachment" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "post_id" INTEGER,
    "comment_id" INTEGER,
    "file_type" VARCHAR(20) NOT NULL CHECK ("file_type" IN ('IMAGE', 'VIDEO', 'DOCUMENT', 'LINK', 'GIF', 'AUDIO')),
    "file_path" VARCHAR(500) NOT NULL,
    "file_name" VARCHAR(255) NOT NULL,
    "file_size" BIGINT,
    "mime_type" VARCHAR(100),
    "file_metadata" JSONB, -- For storing additional file metadata
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id"),
    CONSTRAINT attachment_post_id_fkey FOREIGN KEY ("post_id") REFERENCES badminton."Post"("id") ON DELETE CASCADE,
    CONSTRAINT attachment_comment_id_fkey FOREIGN KEY ("comment_id") REFERENCES badminton."Comment"("id") ON DELETE CASCADE,
    CONSTRAINT attachment_either_post_or_comment CHECK (
        ("post_id" IS NOT NULL AND "comment_id" IS NULL) OR 
        ("post_id" IS NULL AND "comment_id" IS NOT NULL)
    )
);

-- Post reactions table (similar to report reactions)
DROP TABLE IF EXISTS badminton."PostReaction" CASCADE;
CREATE TABLE badminton."PostReaction" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "post_id" INTEGER NOT NULL,
    "user_id" INTEGER NOT NULL,
    "emoji" VARCHAR(10) NOT NULL,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id"),
    CONSTRAINT post_reaction_post_id_fkey FOREIGN KEY ("post_id") REFERENCES badminton."Post"("id") ON DELETE CASCADE,
    CONSTRAINT post_reaction_user_id_fkey FOREIGN KEY ("user_id") REFERENCES badminton."User"("id") ON DELETE CASCADE,
    CONSTRAINT unique_user_emoji_per_post UNIQUE ("post_id", "user_id", "emoji")
);

-- Comment reactions table
DROP TABLE IF EXISTS badminton."CommentReaction" CASCADE;
CREATE TABLE badminton."CommentReaction" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "comment_id" INTEGER NOT NULL,
    "user_id" INTEGER NOT NULL,
    "emoji" VARCHAR(10) NOT NULL,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id"),
    CONSTRAINT comment_reaction_comment_id_fkey FOREIGN KEY ("comment_id") REFERENCES badminton."Comment"("id") ON DELETE CASCADE,
    CONSTRAINT comment_reaction_user_id_fkey FOREIGN KEY ("user_id") REFERENCES badminton."User"("id") ON DELETE CASCADE,
    CONSTRAINT unique_user_emoji_per_comment UNIQUE ("comment_id", "user_id", "emoji")
);

-- Create indexes for better performance
CREATE INDEX idx_post_user_id ON badminton."Post"("user_id");
CREATE INDEX idx_post_created_at ON badminton."Post"("created_at" DESC);
CREATE INDEX idx_post_is_deleted ON badminton."Post"("is_deleted");

CREATE INDEX idx_comment_post_id ON badminton."Comment"("post_id");
CREATE INDEX idx_comment_user_id ON badminton."Comment"("user_id");
CREATE INDEX idx_comment_parent_comment_id ON badminton."Comment"("parent_comment_id");
CREATE INDEX idx_comment_created_at ON badminton."Comment"("created_at" DESC);
CREATE INDEX idx_comment_is_deleted ON badminton."Comment"("is_deleted");

CREATE INDEX idx_attachment_post_id ON badminton."Attachment"("post_id");
CREATE INDEX idx_attachment_comment_id ON badminton."Attachment"("comment_id");
CREATE INDEX idx_attachment_file_type ON badminton."Attachment"("file_type");

CREATE INDEX idx_post_reaction_post_id ON badminton."PostReaction"("post_id");
CREATE INDEX idx_post_reaction_user_id ON badminton."PostReaction"("user_id");

CREATE INDEX idx_comment_reaction_comment_id ON badminton."CommentReaction"("comment_id");
CREATE INDEX idx_comment_reaction_user_id ON badminton."CommentReaction"("user_id");
