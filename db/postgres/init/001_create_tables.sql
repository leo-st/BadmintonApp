-- Create tables for badminton app
SET search_path TO badminton, public;

-- Users table
DROP TABLE IF EXISTS badminton."User" CASCADE;
CREATE TABLE badminton."User" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "username" VARCHAR(50) NOT NULL,
    "email" VARCHAR(100) NOT NULL,
    "full_name" VARCHAR(100) NOT NULL,
    "hashed_password" VARCHAR(255) NOT NULL,
    "is_active" BOOLEAN NOT NULL DEFAULT TRUE,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id"),
    CONSTRAINT user_username_unique UNIQUE ("username"),
    CONSTRAINT user_email_unique UNIQUE ("email")
);

-- Tournaments table
DROP TABLE IF EXISTS badminton."Tournament" CASCADE;
CREATE TABLE badminton."Tournament" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "name" VARCHAR(100) NOT NULL,
    "description" TEXT,
    "start_date" TIMESTAMP WITH TIME ZONE NOT NULL,
    "end_date" TIMESTAMP WITH TIME ZONE,
    "is_active" BOOLEAN NOT NULL DEFAULT TRUE,
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    PRIMARY KEY ("id")
);

-- Matches table
DROP TABLE IF EXISTS badminton."Match" CASCADE;
CREATE TABLE badminton."Match" (
    "id" INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 CYCLE),
    "player1_id" INTEGER NOT NULL,
    "player2_id" INTEGER NOT NULL,
    "player1_score" INTEGER NOT NULL,
    "player2_score" INTEGER NOT NULL,
    "match_type" VARCHAR(20) NOT NULL CHECK ("match_type" IN ('CASUAL', 'TOURNAMENT')),
    "status" VARCHAR(30) NOT NULL DEFAULT 'PENDING_VERIFICATION' CHECK ("status" IN ('PENDING_VERIFICATION', 'VERIFIED', 'REJECTED')),
    "submitted_by_id" INTEGER NOT NULL,
    "verified_by_id" INTEGER,
    "tournament_id" INTEGER,
    "notes" TEXT,
    "match_date" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
    "verified_at" TIMESTAMP WITH TIME ZONE,
    PRIMARY KEY ("id"),
    CONSTRAINT match_player1_id_fkey FOREIGN KEY ("player1_id") REFERENCES badminton."User"("id") ON DELETE CASCADE,
    CONSTRAINT match_player2_id_fkey FOREIGN KEY ("player2_id") REFERENCES badminton."User"("id") ON DELETE CASCADE,
    CONSTRAINT match_submitted_by_id_fkey FOREIGN KEY ("submitted_by_id") REFERENCES badminton."User"("id") ON DELETE CASCADE,
    CONSTRAINT match_verified_by_id_fkey FOREIGN KEY ("verified_by_id") REFERENCES badminton."User"("id") ON DELETE SET NULL,
    CONSTRAINT match_tournament_id_fkey FOREIGN KEY ("tournament_id") REFERENCES badminton."Tournament"("id") ON DELETE SET NULL,
    CONSTRAINT match_different_players CHECK ("player1_id" != "player2_id")
);

-- Create indexes for better performance
CREATE INDEX idx_user_username ON badminton."User"("username");
CREATE INDEX idx_user_email ON badminton."User"("email");
CREATE INDEX idx_match_player1_id ON badminton."Match"("player1_id");
CREATE INDEX idx_match_player2_id ON badminton."Match"("player2_id");
CREATE INDEX idx_match_status ON badminton."Match"("status");
CREATE INDEX idx_match_type ON badminton."Match"("match_type");
CREATE INDEX idx_match_tournament_id ON badminton."Match"("tournament_id");
CREATE INDEX idx_tournament_is_active ON badminton."Tournament"("is_active");
